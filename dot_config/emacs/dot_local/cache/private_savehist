;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-expression-history embark--prompter-history buffer-name-history command-history evil-ex-history evil-ex-search-history empty-history extended-command-history minibuffer-history file-name-history))
(setq buffer-name-history '("xworkspaces.ini" "layout.lua" "focus.lua" "media.lua"))
(setq command-history '((find-file "~/testar/" t) (find-file "~/Sensorer.org" t) (find-file "~/Documents/" t) (evil-org-delete 641 656 'line nil nil) (evil-org-delete 672 683 'line nil nil) (evil-org-delete 662 667 'line nil nil) (evil-org-delete 196 200 'line nil nil) (evil-org-delete 97 107 'line nil nil) (evil-org-delete 236 239 'line nil nil) (find-file "~/permissions.org" t) (evil-mode 'toggle) (execute-extended-command nil "evil-mode" nil) (evil-mode 'toggle) (execute-extended-command nil "evil-mode" #("evil-mode" 0 9 (ws-butler-chg chg))) (evil-org-delete 2332 2339 'line nil nil) (evil-org-delete 1622 1682 'line nil nil) (evil-org-delete 1514 1563 'line nil nil) (evil-org-delete 1048 1114 'line nil nil) (evil-org-delete 466 505 'line nil nil) (evil-org-delete 311 345 'line nil nil) (evil-org-delete 311 331 'line nil nil) (+format/buffer) (execute-extended-command nil "+format/buffer" #("format" 0 6 (ws-butler-chg chg))) (find-file "~/org.org" t) (find-file "~/query.org" t) (find-file "~/.config/awesome/rc.lua" t) (find-file "~/.config/awesome/themes/" t) (find-file "~/.config/awesome/keybindings/global/rofi.lua" t) (evil-delete 6310 6357 'line nil nil) (evil-yank 6357 6479 'line nil nil) (evil-yank 6367 6414 'line nil nil) (evil-delete 1305 1351 'line nil nil) (evil-yank 1998 2044 'line nil nil) (evil-yank 1998 2044 'line nil nil) (find-file "~/.config/awesome/panel.lua" t) (find-file "~/.config/awesome/rc.lua" t) (find-file "~/.config/awesome/rc.lua" t) (find-file "~/.config/awesome/rc.lua" t) (find-file "~/.config/" t) (find-file "~/dotfiles-1/dot_config/run_once_awesome.sh" t) (find-file "~/dotfiles-1/" t) (find-file "~/.config/awesome/rc.lua" t) (find-file "~/.config/awesome/themes/2023.lua" t) (find-file "~/.config/awesome/panel.lua" t) (find-file "~/.config/awesome/rc.lua" t) (evil-delete 2216 2253 'line nil nil) (find-file "~/.config/awesome/themes/2023.lua" t) (find-file "~/.config/awesome/panel.lua" t) (comment-region (region-beginning) (region-end) nil) (execute-extended-command nil "comment-region" #("comment" 0 7 (ws-butler-chg chg))) (evil-delete 1060 1079 'line nil nil) (find-file "~/.config/awesome/panel.lua" t) (find-file "~/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua" t) (find-file "~/.config/awesome/" t) (evil-delete 977 1065 'line nil nil) (find-file "~/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua" t) (evil-delete 1141 1148 'line nil nil) (evil-delete 6179 6229 'line nil nil) (evil-delete 6230 6307 'line nil nil) (evil-delete 6179 6220 'line nil nil) (evil-delete 6179 6256 'line nil nil) (evil-delete 6260 6282 'line nil nil) (evil-delete 6179 6214 'line nil nil) (evil-delete 1099 1141 'line nil nil) (find-file "~/.config/awesome/themes/" t) (evil-delete 6033 6065 'line nil nil) (evil-delete 6033 6068 'line nil nil) (evil-delete 6274 6307 'line nil nil) (find-file "~/.config/awesome/panel.lua" t) (find-file "~/.config/awesome/keybindings/global/awesome.lua" t) (evil-delete 14569 14608 'line nil nil) (evil-delete 1722 1740 'line nil nil) (evil-delete 11088 11089 'line nil nil) (find-file "~/.config/awesome/rc.lua" t) (find-file "~/.config/awesome/panel.lua" t) (find-file "~/.config/awesome/rc.lua" t) (evil-delete 6025 6057 'line nil nil) (kill-buffer "xworkspaces.ini") (kill-buffer "layout.lua") (kill-buffer "focus.lua") (kill-buffer "media.lua") (kill-buffer "media.lua") (evil-delete 401 447 'line nil nil) (evil-use-register 105) (evil-delete 1496 1534 'line nil nil) (comment-region (region-beginning) (region-end) nil) (execute-extended-command nil "comment-region" #("t" 0 1 (ws-butler-chg chg))) (find-file "~/.config/awesome/themes/2023.lua" t) (find-file "~/.config/polybar/modules/xworkspaces.ini" t) (find-file "~/.config/awesome/panel.lua" t) (evil-delete 134 158 'line nil nil) (find-file "~/.config/awesome/keybindings/global/launcher.lua" t) (evil-delete 1653 1654 'line nil nil) (evil-yank 3147 3184 'line nil nil) (find-file "~/.config/awesome/keybindings/global/tag.lua" t) (find-file "~/.config/awesome/keybindings/global/layout.lua" t) (find-file "~/.config/awesome/keybindings/global/focus.lua" t) (find-file "~/.config/awesome/keybindings/global/media.lua" t) (evil-delete 133 141 'line nil nil) (find-file "~/.config/awesome/keybindings/rofi.lua" t)))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("%s/hej/banan" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12))))
(setq evil-ex-search-history '("arc" "icon" "10" "float" "spotify" "spot" "rofi" "keybindings" "rofi" "terminal" "mytaglist" "wibar" "polybar" "client_keybin" "keybinds" "wibar" "mytextclock" "mytext" "mytextclock" "title" "0" "[index]" "names" "only view" "keygrabber" "\"h\"" "run" "mod1" "screen.focus" "focus.screen" "\"p\"" "byidx" "focus" "start" "startup" "cl"))
(setq extended-command-history '("evil-mode" "+format/buffer" "comment-region" "uncomment-region" "comment-region" "uncomment-region" "comment-region" "uncomment-region" "load-theme" "buffer-menu" "lsp" "doom/homepage" "lsp!" "+format/buffer" "format-all-mode" "+format/buffer" "comment-region" "comment-box"))
(setq minibuffer-history '("catppuccin" "lua-language-server"))
(setq file-name-history '("~/testar/" "~/Sensorer.org" "~/Documents/" "~/permissions.org" "~/org.org" "~/query.org" "~/.config/awesome/rc.lua" "~/.config/awesome/themes/" "~/.config/awesome/keybindings/global/rofi.lua" "~/.config/awesome/panel.lua" "~/.config/awesome/rc.lua" "~/.config/" "~/dotfiles-1/dot_config/run_once_awesome.sh" "~/dotfiles-1/" "~/.config/awesome/rc.lua" "~/.config/awesome/themes/2023.lua" "~/.config/awesome/panel.lua" "~/.config/awesome/rc.lua" "~/.config/awesome/themes/2023.lua" "~/.config/awesome/panel.lua" "~/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua" "~/.config/awesome/" "~/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua" "~/.config/awesome/themes/" "~/.config/awesome/panel.lua" "~/.config/awesome/keybindings/global/awesome.lua" "~/.config/awesome/rc.lua" "~/.config/awesome/panel.lua" "~/.config/awesome/rc.lua" "~/.config/awesome/themes/2023.lua" "~/.config/polybar/modules/xworkspaces.ini" "~/.config/awesome/panel.lua" "~/.config/awesome/keybindings/global/launcher.lua" "~/.config/awesome/keybindings/global/tag.lua" "~/.config/awesome/keybindings/global/layout.lua" "~/.config/awesome/keybindings/global/focus.lua" "~/.config/awesome/keybindings/global/media.lua" "~/.config/awesome/keybindings/rofi.lua" "~/.config/awesome/wibar.lua" "~/.config/awesome/keybindings.lua" "~/.config/awesome/rc.lua" "~/.config/" "~/.config/awesome/themes/" "~/.config/awesome/spotify_song.lua" "~/.config/awesome/spotify.lua" "~/.config/awesome/rc.lua" "~/.config/awesome/themes/2023.lua" "~/.config/awesome/rc.lua" "~/.config/" "~/hej" "~/.config/doom/init.el" "~/.config/" "~/.config/doom/init.el" "~/.config/doom/config.el" "~/.config/" "~/Sensorer.org" "~/Sensorer" "~/.config/awesome/" "~/.config/" "~/.config/awesome/ui/bar/" "~/.config/awesome/ui/bar/init.lua" "~/.config/awesome/ui/" "~/.config/awesome/config/" "~/.config/awesome/rc.lua" "~/.config/awesome/ui/" "~/.config/awesome/config/" "~/.config/awesome/rc.lua" "~/.config/awesome/ui/bar/widgets/" "~/.config/awesome/ui/bar/init.lua" "~/.config/awesome/ui/bar/widgets/" "~/.config/awesome/ui/bar/" "~/.config/awesome/ui/" "~/.config/awesome/helpers.lua" "~/.config/awesome/config/bindings-keys.lua" "~/.config/awesome/config/variables.lua" "~/.config/awesome/config/signals.lua" "~/.config/awesome/config/rules.lua" "~/.config/awesome/config/layouts.lua" "~/.config/awesome/config/" "~/.config/awesome/rc.lua" "~/.config/awesome/helpers.lua" "~/.config/awesome/ui/bar/utils.lua" "~/.config/awesome/ui/bar/" "~/.config/awesome/ui/theme/colors.lua" "~/.config/awesome/ui/theme/theme.lua" "~/.config/awesome/ui/" "~/.config/awesome/rc.lua" "~/.config/awesome/ui/solarcycle/" "~/.config/awesome/ui/solarcycle/listener.lua" "~/.config/awesome/ui/solarcycle/" "~/.config/awesome/ui/bar/" "~/.config/awesome/ui/notifications.lua" "~/.config/awesome/ui/titlebar.lua" "~/.config/awesome/ui/wallpaper.lua" "~/.config/awesome/ui/menu.lua" "~/.config/awesome/ui/bar/init.lua" "~/.config/awesome/ui/bar/widgets/dashboard.lua" "~/.config/awesome/ui/bar/widgets/" "~/.config/awesome/ui/bar/" "~/.config/awesome/ui/wallpaper.lua"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((1 "/home/vermium/org.org") (2590 "/home/vermium/org.org") (603 "/home/vermium/permissions.org") (2926 "/home/vermium/org.org") (45 "/home/vermium/permissions.org") (2926 "/home/vermium/org.org") (88 "/home/vermium/org.org") (881 "/home/vermium/.config/awesome/keybindings/global/rofi.lua") (29 "/home/vermium/.config/awesome/panel.lua") (6792 "/home/vermium/.config/awesome/panel.lua") (2300 "/home/vermium/.config/awesome/panel.lua") (30 "/home/vermium/.config/awesome/rc.lua") (11689 "/home/vermium/.config/awesome/rc.lua") (1126 "/home/vermium/.config/awesome/rc.lua") (895 "/home/vermium/.config/awesome/rc.lua") (1697 "/home/vermium/.config/awesome/panel.lua") (5675 "/home/vermium/.config/awesome/rc.lua") (1992 "/home/vermium/.config/awesome/themes/2023.lua") (1050 "/home/vermium/.config/awesome/panel.lua") (5978 "/home/vermium/.config/awesome/themes/2023.lua") (8905 "/home/vermium/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua") (2581 "/home/vermium/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua") (1860 "/home/vermium/.config/awesome/panel.lua") (1070 "/home/vermium/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua") (1 "/home/vermium/.config/awesome/awesome-wm-widgets/battery-widget/battery.lua") (1154 "/home/vermium/.config/awesome/panel.lua") (6778 "/home/vermium/.config/awesome/panel.lua") (6176 "/home/vermium/.config/awesome/panel.lua") (6092 "/home/vermium/.config/awesome/themes/2023.lua") (5978 "/home/vermium/.config/awesome/themes/2023.lua") (5953 "/home/vermium/.config/awesome/themes/2023.lua") (5926 "/home/vermium/.config/awesome/themes/2023.lua") (5899 "/home/vermium/.config/awesome/themes/2023.lua") (5828 "/home/vermium/.config/awesome/themes/2023.lua") (5800 "/home/vermium/.config/awesome/themes/2023.lua") (5780 "/home/vermium/.config/awesome/themes/2023.lua") (4634 "/home/vermium/.config/awesome/themes/2023.lua") (2197 "/home/vermium/.config/awesome/themes/2023.lua") (1907 "/home/vermium/.config/awesome/themes/2023.lua") (1906 "/home/vermium/.config/awesome/themes/2023.lua") (6656 "/home/vermium/.config/awesome/panel.lua") (1091 "/home/vermium/.config/awesome/keybindings/global/awesome.lua") (685 "/home/vermium/.config/awesome/keybindings/global/awesome.lua") (12315 "/home/vermium/.config/awesome/rc.lua") (11653 "/home/vermium/.config/awesome/rc.lua") (11667 "/home/vermium/.config/awesome/rc.lua") (911 "/home/vermium/.config/awesome/panel.lua") (11880 "/home/vermium/.config/awesome/rc.lua") (3009 "/home/vermium/.config/awesome/rc.lua") (994 "/home/vermium/.config/awesome/panel.lua") (9292 "/home/vermium/.config/awesome/rc.lua") (1357 "/home/vermium/.config/awesome/panel.lua") (11881 "/home/vermium/.config/awesome/rc.lua") (6351 "/home/vermium/.config/awesome/panel.lua") (3576 "/home/vermium/.config/awesome/rc.lua") (13191 "/home/vermium/.config/awesome/rc.lua") (11060 "/home/vermium/.config/awesome/rc.lua") (10063 "/home/vermium/.config/awesome/rc.lua") (9992 "/home/vermium/.config/awesome/rc.lua") (7837 "/home/vermium/.config/awesome/rc.lua") (5170 "/home/vermium/.config/awesome/rc.lua") (5110 "/home/vermium/.config/awesome/rc.lua") (14341 "/home/vermium/.config/awesome/rc.lua") (14295 "/home/vermium/.config/awesome/rc.lua") (13191 "/home/vermium/.config/awesome/rc.lua") (11060 "/home/vermium/.config/awesome/rc.lua") (10063 "/home/vermium/.config/awesome/rc.lua") (9992 "/home/vermium/.config/awesome/rc.lua") (8279 "/home/vermium/.config/awesome/rc.lua") (5170 "/home/vermium/.config/awesome/rc.lua") (5110 "/home/vermium/.config/awesome/rc.lua") (852 "/home/vermium/.config/awesome/rc.lua") (3701 "/home/vermium/.config/awesome/panel.lua") (851 "/home/vermium/.config/awesome/panel.lua") (852 "/home/vermium/.config/awesome/rc.lua") (3891 "/home/vermium/.config/awesome/rc.lua") (3224 "/home/vermium/.config/awesome/rc.lua") (3185 "/home/vermium/.config/awesome/rc.lua") (3153 "/home/vermium/.config/awesome/rc.lua") (3114 "/home/vermium/.config/awesome/rc.lua") (3078 "/home/vermium/.config/awesome/rc.lua") (3011 "/home/vermium/.config/awesome/rc.lua") (3011 "/home/vermium/.config/awesome/rc.lua") (3011 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (14381 "/home/vermium/.config/awesome/rc.lua") (9131 "/home/vermium/.config/awesome/rc.lua") (26 "/home/vermium/.config/awesome/rc.lua") (9124 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua") (10466 "/home/vermium/.config/awesome/rc.lua") (1 "/home/vermium/.config/awesome/rc.lua")))
(setq kill-ring '("#+title: Org

* Zyner
- zyner.org
- zyner.net
** Privata
- privata.zyner.org
- zyner.net
** Xyter
- xyter.org
* Kimane
- kimane.se
** Staff
- kimane.se
* Zervo
- zervo.org
- zervo.network
** Friends
- zervo.org
- friends.zervo.org


* Organization Model
| Name    | Parent Organization |
| Privata | Zyner               |

* Domain Model

| Domain    | Organization |
| zyner.org | Zyner        |


| Domain    | Organizations[]        |
| zyner.org | [Zyner, Zyner.Privata] |

* Elis Design
** Tables
*** Organizations
| Name    | Parent Organization | Domains[]                     |
| Zyner   | NULL                | [zyner.org,zyner.net]         |
| Privata | Zyner               | [privata.zyner.org,zyner.net] |
| Xyter   | Zyner               | [xyter.org]                   |
| Kimane  | NULL                | [kimane.se]                   |
| Staff   | Kimane              | [kimane.se]                   |
| Zervo   | NULL                | [zervo.org,zervo.network]     |
| Friends | Zervo               | [zervo.org,friends.zervo.org] |
*** Domains
| Name              |
| zyner.org         |
| zyner.net         |
| privata.zyner.org |
| xyter.org         |
| kimane.se         |
| zervo.org         |
| zervo.network     |
| friends.zervo.org |
*** Users (Managing Users, Not Mailboxes or calendars etc etc)
| Username | Organizations[]                   | Type     |
| mg433    | [Kimane,Zyner.Privata]            | Reseller |
| zervo    | [Zervo,Zervo.Friends,Zyner.Xyter] | Reseller |
| vermium  | [Zyner,Zyner.Privata,Zyner.Xyter] | Admin    |
| pajsen   | [Kimane,Zyner.Privata]            | User     |



* Kimane
** 1000 domains
*** Users
**** mg433
UNLIMITED = 1000 domains - USED
**** pajsen
100 domains
*** Organization
**** Kimane
1000 domains = TOP LEVEL ORG
**** Staff
50 domains
** 5000 mailboxes
*** Users
**** mg433
UNLIMITED = 5000 mailboxes - USED
**** pajsen
100 mailboxes
*** Organization
**** Kimane
1000 mailboxes = TOP LEVEL ORG
**** Staff
50 mailboxes
*** Domains
**** kimane.se
700 mailboxes

if ((org.max||users.max||domains.max||roles.max)===maxMailboxes) {
throw new Error(\"MAX LIMIT REACHED\")}


* Level
** Users (resellers, admins, users)
*** Organizations
**** Domains
**** Organizations
***** Domains

** Kimane User (kimane, reseller9
*** Organization
***** Kimane
****** Staff
******* Domains
******** staff.kimane.se
******* Users
******** pellesvanslös
******** smurre
******** craftworks
***** DWTFTPL
*** Users
**** kimane
**** zervo
*** Domains
**** kimane.se



* BEST SYSTEM EVER
** Create Organization
*** Organization Name
**** Name
kimane.se
*** Admin User
**** Username
kimane
**** Password
banansvett
*** Quotas
**** Max Organizations
7
**** Max Storage
800GB
**** Max Mailboxes
743
**** Max Domains
83


* BLAHABLAHA
** Users
- kimane
- zyner
- vermium
- zervo
- smurre
- craftworks
** Orgs
- Kimane
- Kimane Staff
- Zervo
- Zyner
- Zyner Privata
- Xyter
- Sweplox
" "**** xyter.org
" "***** xyter.org
" "*** Kimane
" "*** 
" "***
" "**** Orgs
" "*** fjong
" "**
" " (LIMITED BY ORGANIZATION)" "kima" "**** pellesvanslös
**** smurre
**** craftworks
" "***** Domains

" "***** 
" "Reseller " "*** Users
**** mg433
UNLIMITED = 1000 domains - USED
**** pajsen
100 domains
*** Organization
**** Kimane
1000 domains = TOP LEVEL ORG
**** Staff
50 domains
" "Junab" "|          |                                   |          |
" "|          |                                   |
" "          |                     |                               |
" "privata." "|           |                        |
" "|         |                     |
" "| Privata | Zyner |
" "name" "Organizat" "Domai" "Emacs\", \"VSCodium" "    ruled.client.append_rule {
        rule_any = {class = {\"Emacs\", \"VSCodium\"}},
        properties = {tag = tagNames[2], switch_to_tags = true}
    }
" "        awful.key(
            {modkey},
            \"q\",
            function()
                awful.spawn(\"rofi -show calc -modi calc -no-show-match -no-sort\")
            end,
            {description = \"Calculator\", group = \"rofi\"}
        )
" "-- awesome_mode: api-level=4:screen=on
-- If LuaRocks is installed, make sure that packages installed through it are
-- found (e.g. lgi). If LuaRocks is not installed, do nothing.
pcall(require, \"luarocks.loader\")

-- Standard awesome library
local gears = require(\"gears\")
local awful = require(\"awful\")
require(\"awful.autofocus\")
-- Widget and layout library
local wibox = require(\"wibox\")
local lain = require(\"lain\")
-- Theme handling library
local beautiful = require(\"beautiful\")
-- Notification library
local naughty = require(\"naughty\")
-- Declarative object management
local ruled = require(\"ruled\")
local menubar = require(\"menubar\")
local hotkeys_popup = require(\"awful.hotkeys_popup\")
-- Enable hotkeys help widget for VIM and other apps
-- when client with a matching name is opened:
require(\"awful.hotkeys_popup.keys\")
local theme = gears.filesystem.get_configuration_dir() .. \"themes/2023.lua\"

tagNames = {\"󱓞 1\", \"󰈮 2\", \" 3\", \"󰇮 4\", \"󰦑 5\", \"󰭻 6\", \"󰝚 7\", \"󱛉 8\", \"󰊴 9\", \"󰖟 10\"}

local battery_widget = require(\"awesome-wm-widgets.battery-widget.battery\")

screen.connect_signal(
    \"request::desktop_decoration\",
    function(s)
        -- Each screen has its own tag table.
        local l = awful.layout.suit -- Just to save some typing: use an alias.
        local layouts = {
            l.floating,
            l.fair,
            l.fair,
            l.tile,
            l.tile,
            l.max,
            l.tile,
            l.fair,
            l.tile,
            l.fair
        }
        awful.tag(tagNames, s, layouts)

        -- Create a promptbox for each screen
        s.mypromptbox = awful.widget.prompt()

        s.mytextclock = wibox.widget.textclock(\"%H:%M:%S\", 1)
        s.month_calendar = awful.widget.calendar_popup.month()
        s.month_calendar:attach(s.mytextclock, \"tc\")

        -- Create an imagebox widget which will contain an icon indicating which layout we're using.
        -- We need one layoutbox per screen.
        s.mylayoutbox =
            awful.widget.layoutbox {
            screen = s,
            buttons = {
                awful.button(
                    {},
                    1,
                    function()
                        awful.layout.inc(1)
                    end
                ),
                awful.button(
                    {},
                    3,
                    function()
                        awful.layout.inc(-1)
                    end
                ),
                awful.button(
                    {},
                    4,
                    function()
                        awful.layout.inc(-1)
                    end
                ),
                awful.button(
                    {},
                    5,
                    function()
                        awful.layout.inc(1)
                    end
                )
            }
        }

        -- Create a taglist widget
        s.mytaglist =
            awful.widget.taglist {
            screen = s,
            filter = awful.widget.taglist.filter.all,
            buttons = {
                awful.button(
                    {},
                    1,
                    function(t)
                        t:view_only()
                    end
                ),
                awful.button(
                    {modkey},
                    1,
                    function(t)
                        if client.focus then
                            client.focus:move_to_tag(t)
                        end
                    end
                ),
                awful.button({}, 3, awful.tag.viewtoggle),
                awful.button(
                    {modkey},
                    3,
                    function(t)
                        if client.focus then
                            client.focus:toggle_tag(t)
                        end
                    end
                ),
                awful.button(
                    {},
                    4,
                    function(t)
                        awful.tag.viewprev(t.screen)
                    end
                ),
                awful.button(
                    {},
                    5,
                    function(t)
                        awful.tag.viewnext(t.screen)
                    end
                )
            }
        }

        -- Create a tasklist widget
        s.mytasklist =
            awful.widget.tasklist {
            screen = s,
            filter = awful.widget.tasklist.filter.currenttags,
            buttons = {
                awful.button(
                    {},
                    1,
                    function(c)
                        c:activate {context = \"tasklist\", action = \"toggle_minimization\"}
                    end
                ),
                awful.button(
                    {},
                    3,
                    function()
                        awful.menu.client_list {theme = {width = 250}}
                    end
                ),
                awful.button(
                    {},
                    4,
                    function()
                        awful.client.focus.byidx(-1)
                    end
                ),
                awful.button(
                    {},
                    5,
                    function()
                        awful.client.focus.byidx(1)
                    end
                )
            }
        }

        -- Create the wibox
        s.mywibox =
            awful.wibar {
            position = \"top\",
            screen = s,
            height = \"20\",
            widget = {
                layout = wibox.layout.align.horizontal,
                expand = \"none\",
                {
                    -- Left widgets
                    layout = wibox.layout.fixed.horizontal,
                    s.mytaglist,
                    --mylauncher,
                    s.mypromptbox
                },
                {
                    layout = wibox.layout.fixed.horizontal,
                    s.mytextclock
                },
                {
                    -- Right widgets
                    layout = wibox.layout.fixed.horizontal,
                    battery_widget(),
                    -- wibox.widget.textbox(\"|\"),
                    -- mykeyboardlayout,

                    -- Show systray on primary screen only
                    awful.widget.only_on_screen(wibox.widget.textbox(\"|\"), screen.primary),
                    awful.widget.only_on_screen(wibox.layout.margin(wibox.widget.systray(), 3, 3, 3, 3), screen.primary),
                    -- Show layout box
                    wibox.widget.textbox(\"|\"),
                    wibox.container.margin(s.mylayoutbox, 3, 3, 3, 3)
                }
            }
        }
    end
)
" "wibox.layout.margin(wibox.widget.systray(), 3, 3, 3, 3)" "                    wibox.widget.textbox(\"|\"),
" "                    awful.widget.only_on_screen(wibox.layout.margin(wibox.widget.systray(), 3, 3, 3, 3), screen.primary),
" "                    wibox.widget.textbox(\"|\"),
" "        -- Each screen has its own tag table.
" "        -- awful.tag({\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"}, s, awful.layout.layouts[1])
        -- awful.tag({\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"}, s, awful.layout.layouts[1])
" "        s.mypromptbox = awful.widget.prompt()
" "        s.mypromptbox = awful.widget.prompt()
" "-- awesome_mode: api-level=4:screen=on
-- If LuaRocks is installed, make sure that packages installed through it are
-- found (e.g. lgi). If LuaRocks is not installed, do nothing.
pcall(require, \"luarocks.loader\")

-- Standard awesome library
local gears = require(\"gears\")
local awful = require(\"awful\")
require(\"awful.autofocus\")

-- Widget and layout library
local wibox = require(\"wibox\")
local lain = require(\"lain\")

-- Theme handling library
local beautiful = require(\"beautiful\")

-- Notification library
local naughty = require(\"naughty\")

-- Declarative object management
local ruled = require(\"ruled\")
local menubar = require(\"menubar\")
local hotkeys_popup = require(\"awful.hotkeys_popup\")

-- Enable hotkeys help widget for VIM and other apps
-- when client with a matching name is opened:
require(\"awful.hotkeys_popup.keys\")

-- Load theme
local theme = gears.filesystem.get_configuration_dir() .. \"themes/2023.lua\"

-- {{{ Error handling
-- Check if awesome encountered an error during startup and fell back to
-- another config (This code will only ever execute for the fallback config)
naughty.connect_signal(
    \"request::display_error\",
    function(message, startup)
        naughty.notification {
            urgency = \"critical\",
            title = \"Oops, an error happened\" .. (startup and \" during startup!\" or \"!\"),
            message = message
        }
    end
)
-- }}}

-- {{{ Variable definitions
-- Themes define colours, icons, font and wallpapers.
-- beautiful.init(gears.filesystem.get_themes_dir() .. \"default/theme.lua\")
beautiful.init(gears.filesystem.get_configuration_dir() .. \"themes/2023.lua\")

-- This is used later as the default terminal and editor to run.
terminal = \"alacritty\"
editor = os.getenv(\"EDITOR\") or \"emacs\"
editor_cmd = terminal .. \" -e \" .. editor

-- NEW CONFIG

-- Default modkey.
-- Usually, Mod4 is the key with a logo between Control and Alt.
-- If you do not like this or do not have such a key,
-- I suggest you to remap Mod4 to another key using xmodmap or other tools.
-- However, you can use another modifier like Mod1, but it may interact with others.
modkey = \"Mod4\"
-- }}}

-- {{{ Menu
-- Create a launcher widget and a main menu
myawesomemenu = {
    {
        \"hotkeys\",
        function()
            hotkeys_popup.show_help(nil, awful.screen.focused())
        end
    },
    {\"manual\", terminal .. \" -e man awesome\"},
    {\"edit config\", editor_cmd .. \" \" .. awesome.conffile},
    {\"restart\", awesome.restart},
    {
        \"quit\",
        function()
            awesome.quit()
        end
    }
}

mymainmenu =
    awful.menu(
    {
        items = {
            {\"awesome\", myawesomemenu, beautiful.awesome_icon},
            {\"open terminal\", terminal}
        }
    }
)

mylauncher =
    awful.widget.launcher(
    {
        image = beautiful.awesome_icon,
        menu = mymainmenu
    }
)

-- Menubar configuration
menubar.utils.terminal = terminal -- Set the terminal for applications that require it
-- }}}

-- Keybindings
require(\"keybindings.global.rofi\")
require(\"keybindings.global.media\")
require(\"keybindings.global.focus\")
require(\"keybindings.global.layout\")
require(\"keybindings.global.tag\")
require(\"keybindings.global.launcher\")
require(\"keybindings.global.awesome\")

client.connect_signal(
    \"request::default_mousebindings\",
    function()
        awful.mouse.append_client_mousebindings(
            {
                awful.button(
                    {},
                    1,
                    function(c)
                        c:activate {context = \"mouse_click\"}
                    end
                ),
                awful.button(
                    {modkey},
                    1,
                    function(c)
                        c:activate {context = \"mouse_click\", action = \"mouse_move\"}
                    end
                ),
                awful.button(
                    {modkey},
                    3,
                    function(c)
                        c:activate {context = \"mouse_click\", action = \"mouse_resize\"}
                    end
                )
            }
        )
    end
)

client.connect_signal(
    \"request::default_keybindings\",
    function()
        awful.keyboard.append_client_keybindings(
            {
                awful.key({modkey}, \"t\", awful.titlebar.toggle, {description = \"toggle title bar\", group = \"client\"}),
                awful.key(
                    {modkey},
                    \"f\",
                    function(c)
                        c.fullscreen = not c.fullscreen
                        c:raise()
                    end,
                    {description = \"toggle fullscreen\", group = \"client\"}
                ),
                awful.key(
                    {modkey, \"Shift\"},
                    \"q\",
                    function(c)
                        c:kill()
                    end,
                    {description = \"close\", group = \"client\"}
                ),
                awful.key(
                    {modkey, \"Control\"},
                    \"space\",
                    awful.client.floating.toggle,
                    {description = \"toggle floating\", group = \"client\"}
                ),
                awful.key(
                    {modkey, \"Control\"},
                    \"Return\",
                    function(c)
                        c:swap(awful.client.getmaster())
                    end,
                    {description = \"move to master\", group = \"client\"}
                ),
                awful.key(
                    {modkey},
                    \"o\",
                    function(c)
                        c:move_to_screen()
                    end,
                    {description = \"move to screen\", group = \"client\"}
                ),
                awful.key(
                    {modkey},
                    \"t\",
                    function(c)
                        c.ontop = not c.ontop
                    end,
                    {description = \"toggle keep on top\", group = \"client\"}
                ),
                awful.key(
                    {modkey},
                    \"n\",
                    function(c)
                        -- The client currently has the input focus, so it cannot be
                        -- minimized, since minimized clients can't have the focus.
                        c.minimized = true
                    end,
                    {description = \"minimize\", group = \"client\"}
                ),
                awful.key(
                    {modkey},
                    \"m\",
                    function(c)
                        c.maximized = not c.maximized
                        c:raise()
                    end,
                    {description = \"(un)maximize\", group = \"client\"}
                ),
                awful.key(
                    {modkey, \"Control\"},
                    \"m\",
                    function(c)
                        c.maximized_vertical = not c.maximized_vertical
                        c:raise()
                    end,
                    {description = \"(un)maximize vertically\", group = \"client\"}
                ),
                awful.key(
                    {modkey, \"Shift\"},
                    \"m\",
                    function(c)
                        c.maximized_horizontal = not c.maximized_horizontal
                        c:raise()
                    end,
                    {description = \"(un)maximize horizontally\", group = \"client\"}
                )
            }
        )
    end
)

-- End of Keybindings

-- {{{ Tag layout
-- Table of layouts to cover with awful.layout.inc, order matters.
tag.connect_signal(
    \"request::default_layouts\",
    function()
        awful.layout.append_default_layouts(
            {
                awful.layout.suit.floating,
                awful.layout.suit.tile,
                awful.layout.suit.tile.left,
                awful.layout.suit.tile.bottom,
                awful.layout.suit.tile.top,
                awful.layout.suit.fair,
                awful.layout.suit.fair.horizontal,
                awful.layout.suit.spiral,
                awful.layout.suit.spiral.dwindle,
                awful.layout.suit.max,
                awful.layout.suit.max.fullscreen,
                awful.layout.suit.magnifier,
                awful.layout.suit.corner.nw
            }
        )
    end
)
-- }}}

-- {{{ Wallpaper
screen.connect_signal(
    \"request::wallpaper\",
    function(s)
        awful.wallpaper {
            screen = s,
            widget = {
                {
                    image = beautiful.wallpaper,
                    upscale = true,
                    downscale = true,
                    widget = wibox.widget.imagebox
                },
                valign = \"center\",
                halign = \"center\",
                tiled = false,
                widget = wibox.container.tile
            }
        }
    end
)
-- }}}

-- {{{ Wibar

-- Keyboard map indicator and switcher
mykeyboardlayout = awful.widget.keyboardlayout()

mytextclock = awful.widget.textclock()

require(\"panel\")
-- }}}

-- {{{ Mouse bindings
awful.mouse.append_global_mousebindings(
    {
        awful.button(
            {},
            3,
            function()
                mymainmenu:toggle()
            end
        ),
        awful.button({}, 4, awful.tag.viewprev),
        awful.button({}, 5, awful.tag.viewnext)
    }
)
-- }}}

-- {{{ Rules
-- Rules to apply to new clients.
ruled.client.connect_signal(
    \"request::rules\",
    function()
        -- All clients will match this rule.
        ruled.client.append_rule {
            id = \"global\",
            rule = {},
            properties = {
                focus = awful.client.focus.filter,
                raise = true,
                screen = awful.screen.preferred,
                placement = awful.placement.no_overlap + awful.placement.no_offscreen
            }
        }

        -- Floating clients.
        ruled.client.append_rule {
            id = \"floating\",
            rule_any = {
                instance = {\"copyq\", \"pinentry\"},
                class = {
                    \"Arandr\",
                    \"Blueman-manager\",
                    \"Gpick\",
                    \"Kruler\",
                    \"Sxiv\",
                    \"Tor Browser\",
                    \"Wpa_gui\",
                    \"veromix\",
                    \"xtightvncviewer\"
                },
                -- Note that the name property shown in xprop might be set slightly after creation of the client
                -- and the name shown there might not match defined rules here.
                name = {
                    \"Event Tester\" -- xev.
                },
                role = {
                    \"AlarmWindow\", -- Thunderbird's calendar.
                    \"ConfigManager\", -- Thunderbird's about:config.
                    \"pop-up\" -- e.g. Google Chrome's (detached) Developer Tools.
                }
            },
            properties = {floating = true}
        }

        -- Add titlebars to normal clients and dialogs
        -- ruled.client.append_rule {
        --     id = \"titlebars\",
        --     rule_any = {type = {\"normal\", \"dialog\"}},
        --     properties = {titlebars_enabled = true}
        -- }

        ruled.client.append_rule {
            rule_any = {class = {\"Emacs\", \"VSCodium\"}},
            properties = {tag = tagNames[2], switch_to_tags = true}
        }

        ruled.client.append_rule {
            rule_any = {class = {\"Alacritty\"}},
            properties = {tag = tagNames[3], switch_to_tags = true}
        }

        ruled.client.append_rule {
            rule_any = {class = {\"Spotify\"}},
            properties = {tag = tagNames[7], switch_to_tags = true}
        }

        -- Set Firefox to always map on the tag named \"2\" on screen 1.
        ruled.client.append_rule {
            rule_any = {class = {\"firefox\", \"qutebrowser\"}},
            properties = {tag = tagNames[10], switch_to_tags = true}
        }
    end
)
-- }}}

-- {{{ Titlebars
-- Add a titlebar if titlebars_enabled is set to true in the rules.
client.connect_signal(
    \"request::titlebars\",
    function(c)
        -- buttons for the titlebar
        local buttons = {
            awful.button(
                {},
                1,
                function()
                    c:activate {context = \"titlebar\", action = \"mouse_move\"}
                end
            ),
            awful.button(
                {},
                3,
                function()
                    c:activate {context = \"titlebar\", action = \"mouse_resize\"}
                end
            )
        }

        awful.titlebar(c).widget = {
            {
                -- Left
                awful.titlebar.widget.iconwidget(c),
                buttons = buttons,
                layout = wibox.layout.fixed.horizontal
            },
            {
                -- Middle
                {
                    -- Title
                    halign = \"center\",
                    widget = awful.titlebar.widget.titlewidget(c)
                },
                buttons = buttons,
                layout = wibox.layout.flex.horizontal
            },
            {
                -- Right
                awful.titlebar.widget.floatingbutton(c),
                awful.titlebar.widget.maximizedbutton(c),
                awful.titlebar.widget.stickybutton(c),
                awful.titlebar.widget.ontopbutton(c),
                awful.titlebar.widget.closebutton(c),
                layout = wibox.layout.fixed.horizontal()
            },
            layout = wibox.layout.align.horizontal
        }
    end
)
-- }}}

-- {{{ Notifications

ruled.notification.connect_signal(
    \"request::rules\",
    function()
        -- All notifications will match this rule.
        ruled.notification.append_rule {
            rule = {},
            properties = {
                screen = awful.screen.preferred,
                implicit_timeout = 5
            }
        }
    end
)

naughty.connect_signal(
    \"request::display\",
    function(n)
        naughty.layout.box {notification = n}
    end
)

-- }}}

-- Enable sloppy focus, so that focus follows mouse.
client.connect_signal(
    \"mouse::enter\",
    function(c)
        c:activate {context = \"mouse_enter\", raise = false}
    end
)

-- client.connect_signal(
--     \"property::floating\",
--     function(c)
--         if c.floating and not c.class == \"Polybar\" then
--             awful.titlebar.show(c)
--         else
--             awful.titlebar.hide(c)
--         end
--     end
-- )

-- Startup
awful.spawn(\"autorandr -c\")
awful.spawn(\"picom\")
" "run_once_" "SCodium" "        ruled.client.append_rule {
            rule_any = {class = {\"Emacs\", \"VSCodium\"}},
            properties = {tag = tagNames[2], switch_to_tags = true}
        }

" "                    wibox.widget.textbox(\"|\"),
" "            wibox.container.margin {
" "
" "}" "            },
            3,
            3,
            3,
            3
        }
" "widget" "  , {refresh = 1})
" "%H:%M:%S" "                    battery_widget()
" "		battery_widget()," "status" "    if not gfs.dir_readable(path_to_icons) then
        naughty.notify{
            title = \"Battery Widget\",
            text = \"Folder with icons doesn't exist: \" .. path_to_icons,
            preset = naughty.config.presets.critical
        }
    end
" "    local path_to_icons = args.path_to_icons or \"/usr/share/icons/Arc/status/symbolic/\"
" "local battery_widget = require(\"awesome-wm-widgets.battery-widget.battery\")" "volume
" "volume" "        -- pactl based volume widget for pure pipewire setups
        local volume =
            awful.widget.watch(
            \"pactl get-sink-volume @DEFAULT_SINK@ | cut -s -d/ -f2,4; pactl get-sink-mute @DEFAULT_SINK@\",
            5, -- timeout
            function(widget, stdout)
                local volume = \"Volume: \"
                for v in stdout:gmatch(\"(%d+%%)\") do
                    volume = volume .. \" \" .. v
                end
                if #volume == 8 then
                    volume = \"N/A\"
                end
                local mute = string.match(stdout, \"Mute: (%S+)\") or \"N/A\"

                -- customize here
                widget:set_markup(volume .. \" \" .. mute)
            end
        )
"))
(setq register-alist '((48 . "#+title: Org

* Zyner
- zyner.org
- zyner.net
** Privata
- privata.zyner.org
- zyner.net
** Xyter
- xyter.org
* Kimane
- kimane.se
** Staff
- kimane.se
* Zervo
- zervo.org
- zervo.network
** Friends
- zervo.org
- friends.zervo.org


* Organization Model
| Name    | Parent Organization |
| Privata | Zyner               |

* Domain Model

| Domain    | Organization |
| zyner.org | Zyner        |


| Domain    | Organizations[]        |
| zyner.org | [Zyner, Zyner.Privata] |

* Elis Design
** Tables
*** Organizations
| Name    | Parent Organization | Domains[]                     |
| Zyner   | NULL                | [zyner.org,zyner.net]         |
| Privata | Zyner               | [privata.zyner.org,zyner.net] |
| Xyter   | Zyner               | [xyter.org]                   |
| Kimane  | NULL                | [kimane.se]                   |
| Staff   | Kimane              | [kimane.se]                   |
| Zervo   | NULL                | [zervo.org,zervo.network]     |
| Friends | Zervo               | [zervo.org,friends.zervo.org] |
*** Domains
| Name              |
| zyner.org         |
| zyner.net         |
| privata.zyner.org |
| xyter.org         |
| kimane.se         |
| zervo.org         |
| zervo.network     |
| friends.zervo.org |
*** Users (Managing Users, Not Mailboxes or calendars etc etc)
| Username | Organizations[]                   | Type     |
| mg433    | [Kimane,Zyner.Privata]            | Reseller |
| zervo    | [Zervo,Zervo.Friends,Zyner.Xyter] | Reseller |
| vermium  | [Zyner,Zyner.Privata,Zyner.Xyter] | Admin    |
| pajsen   | [Kimane,Zyner.Privata]            | User     |



* Kimane
** 1000 domains
*** Users
**** mg433
UNLIMITED = 1000 domains - USED
**** pajsen
100 domains
*** Organization
**** Kimane
1000 domains = TOP LEVEL ORG
**** Staff
50 domains
** 5000 mailboxes
*** Users
**** mg433
UNLIMITED = 5000 mailboxes - USED
**** pajsen
100 mailboxes
*** Organization
**** Kimane
1000 mailboxes = TOP LEVEL ORG
**** Staff
50 mailboxes
*** Domains
**** kimane.se
700 mailboxes

if ((org.max||users.max||domains.max||roles.max)===maxMailboxes) {
throw new Error(\"MAX LIMIT REACHED\")}


* Level
** Users (resellers, admins, users)
*** Organizations
**** Domains
**** Organizations
***** Domains

** Kimane User (kimane, reseller9
*** Organization
***** Kimane
****** Staff
******* Domains
******** staff.kimane.se
******* Users
******** pellesvanslös
******** smurre
******** craftworks
***** DWTFTPL
*** Users
**** kimane
**** zervo
*** Domains
**** kimane.se



* BEST SYSTEM EVER
** Create Organization
*** Organization Name
**** Name
kimane.se
*** Admin User
**** Username
kimane
**** Password
banansvett
*** Quotas
**** Max Organizations
7
**** Max Storage
800GB
**** Max Mailboxes
743
**** Max Domains
83


* BLAHABLAHA
** Users
- kimane
- zyner
- vermium
- zervo
- smurre
- craftworks
** Orgs
- Kimane
- Kimane Staff
- Zervo
- Zyner
- Zyner Privata
- Xyter
- Sweplox
")))
(setq mark-ring 'nil)
(setq search-ring '(#("0" 0 1 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring '(#("hej" 0 3 (isearch-case-fold-search nil isearch-regexp-function nil))))
