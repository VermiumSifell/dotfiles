local awful = require("awful")
local hotkeys_popup = require("awful.hotkeys_popup")
require
-- {{{ Key bindings

-- General Awesome keys
awful.keyboard.append_global_keybindings(
    {
        awful.key(
            {modkey},
            "s",
            hotkeys_popup.show_help(nil, awful.screen.focused()),
            {description = "show help", group = "awesome"}
        ),
        awful.key({modkey, "Shift"}, "r", awesome.restart, {description = "reload awesome", group = "awesome"}),
        awful.key({modkey, "Shift"}, "e", awesome.quit, {description = "quit awesome", group = "awesome"}),
        awful.key(
            {modkey, "Shift"},
            "s",
            function()
                awful.spawn("slock")
            end,
            {description = "lock screen", group = "awesome"}
        )
    }
)

-- Launcher
awful.keyboard.append_global_keybindings(
    {
        awful.key(
            {modkey},
            "Return",
            function()
                awful.spawn(terminal)
            end,
            {description = "open a terminal", group = "launcher"}
        )
        -- awful.key(
        --     {modkey},
        --     "r",
        --     function()
        --         awful.screen.focused().mypromptbox:run()
        --     end,
        --     {description = "run prompt", group = "launcher"}
        -- )
        -- awful.key(
        --     {modkey},
        --     "p",
        --     function()
        --         menubar.show()
        --     end,
        --     {description = "show the menubar", group = "launcher"}
        -- )
    }
)

-- Tags related keybindings
awful.keyboard.append_global_keybindings(
    {
        -- awful.key({ modkey, "Shift"           }, "Left",   awful.tag.viewprev,
        --           {description = "view previous", group = "tag"}),
        -- awful.key({ modkey, "Shift"           }, "Right",  awful.tag.viewnext,
        --           {description = "view next", group = "tag"}),
        awful.key({modkey}, "Escape", awful.tag.history.restore, {description = "go back", group = "tag"})
    }
)

-- Focus related keybindings
awful.keyboard.append_global_keybindings(
    {
        -- Focus by direction
        awful.key(
            {modkey},
            "Right",
            function()
                awful.client.focus.global_bydirection("right")
            end,
            {description = "focus right", group = "client"}
        ),
        awful.key(
            {modkey},
            "Left",
            function()
                awful.client.focus.global_bydirection("left")
            end,
            {description = "focus left", group = "client"}
        ),
        awful.key(
            {modkey},
            "Up",
            function()
                awful.client.focus.global_bydirection("up")
            end,
            {description = "focus up", group = "client"}
        ),
        awful.key(
            {modkey},
            "Down",
            function()
                awful.client.focus.global_bydirection("down")
            end,
            {description = "focus down", group = "client"}
        ),
        -- HMM
        awful.key(
            {modkey},
            "Tab",
            function()
                awful.client.focus.history.previous()
                if client.focus then
                    client.focus:raise()
                end
            end,
            {description = "go back", group = "client"}
        ),
        awful.key(
            {modkey},
            "p",
            function()
                awful.screen.focus_relative(1)
            end,
            {description = "focus the next screen", group = "screen"}
        ),
        awful.key(
            {modkey, "Shift"},
            "p",
            function()
                awful.screen.focus_relative(-1)
            end,
            {description = "focus the previous screen", group = "screen"}
        ),
        awful.key(
            {modkey, "Control"},
            "n",
            function()
                local c = awful.client.restore()
                -- Focus restored client
                if c then
                    c:activate {raise = true, context = "key.unminimize"}
                end
            end,
            {description = "restore minimized", group = "client"}
        )
    }
)

-- Layout related keybindings
awful.keyboard.append_global_keybindings(
    {
        awful.key(
            {modkey, "Shift"},
            "Right",
            function()
                awful.client.swap.byidx(1)
            end,
            {description = "swap with next client by index", group = "client"}
        ),
        awful.key(
            {modkey, "Shift"},
            "Left",
            function()
                awful.client.swap.byidx(-1)
            end,
            {description = "swap with previous client by index", group = "client"}
        ),
        awful.key({modkey}, "u", awful.client.urgent.jumpto, {description = "jump to urgent client", group = "client"}),
        awful.key(
            {modkey, "Mod1"},
            "Right",
            function()
                awful.tag.incmwfact(0.05)
            end,
            {description = "increase master width factor", group = "layout"}
        ),
        awful.key(
            {modkey, "Mod1"},
            "Left",
            function()
                awful.tag.incmwfact(-0.05)
            end,
            {description = "decrease master width factor", group = "layout"}
        ),
        awful.key(
            {modkey, "Shift"},
            "h",
            function()
                awful.tag.incnmaster(1, nil, true)
            end,
            {description = "increase the number of master clients", group = "layout"}
        ),
        awful.key(
            {modkey, "Shift"},
            "l",
            function()
                awful.tag.incnmaster(-1, nil, true)
            end,
            {description = "decrease the number of master clients", group = "layout"}
        ),
        awful.key(
            {modkey, "Control"},
            "h",
            function()
                awful.tag.incncol(1, nil, true)
            end,
            {description = "increase the number of columns", group = "layout"}
        ),
        awful.key(
            {modkey, "Control"},
            "l",
            function()
                awful.tag.incncol(-1, nil, true)
            end,
            {description = "decrease the number of columns", group = "layout"}
        ),
        awful.key(
            {modkey},
            "space",
            function()
                awful.layout.inc(1)
            end,
            {description = "select next", group = "layout"}
        ),
        awful.key(
            {modkey, "Shift"},
            "space",
            function()
                awful.layout.inc(-1)
            end,
            {description = "select previous", group = "layout"}
        )
    }
)

local resizeKeygrabber =
    awful.keygrabber {
    stop_key = gears.table.join({"Escape"}, {modkey, "r"}),
    timeout = 3,
    root_keybindings = {
        {
            {"Mod4"},
            "r",
            function()
            end
        }
    },
    keybindings = {
        {
            {},
            "Left",
            function()
                awful.tag.incmwfact(-0.02)
            end
        },
        {
            {},
            "Down",
            function()
                awful.client.incwfact(0.03)
            end
        },
        {
            {},
            "Up",
            function()
                awful.client.incwfact(-0.03)
            end
        },
        {
            {},
            "Right",
            function()
                awful.tag.incmwfact(0.02)
            end
        }
    }
}

-- Rofi
awful.keyboard.append_global_keybindings(
    {
        awful.key(
            {modkey},
            "d",
            function()
                awful.spawn("rofi -combi-modi drun,window -show drun")
            end,
            {description = "rofi for drun and windows", group = "rofi"}
        ),
        awful.key(
            {modkey},
            "x",
            function()
                awful.spawn("rofimoji")
            end,
            {description = "Emoji Selector", group = "rofi"}
        ),
        awful.key(
            {modkey},
            "q",
            function()
                awful.spawn("rofi -show calc -modi calc -no-show-match -no-sort")
            end,
            {description = "Calculator", group = "rofi"}
        )
    }
)

-- Media
awful.keyboard.append_global_keybindings(
    {
        awful.key(
            {},
            "XF86AudioPlay",
            function()
                awful.spawn("playerctl --player=spotify,%any play-pause", false)
            end,
            {description = "Play or Pause media", group = "media"}
        ),
        awful.key(
            {},
            "XF86AudioPrev",
            function()
                awful.spawn("playerctl --player=spotify,%any previous", false)
            end,
            {description = "Previous media", group = "media"}
        ),
        awful.key(
            {},
            "XF86AudioNext",
            function()
                awful.spawn("playerctl --player=spotify,%any next", false)
            end,
            {description = "Next media", group = "media"}
        ),
        awful.key(
            {},
            "XF86AudioRaiseVolume",
            function()
                awful.spawn("pactl set-sink-volume @DEFAULT_SINK@ +10%", false)
            end,
            {description = "Increase Volume", group = "media"}
        ),
        awful.key(
            {},
            "XF86AudioLowerVolume",
            function()
                awful.spawn("pactl set-sink-volume @DEFAULT_SINK@ -10%", false)
            end,
            {description = "Decrease Volume", group = "media"}
        ),
        awful.key(
            {},
            "XF86AudioMute",
            function()
                awful.spawn("pactl set-sink-mute @DEFAULT_SINK@ toggle", false)
            end,
            {description = "Mute Audio", group = "media"}
        ),
        awful.key(
            {},
            "XF86AudioMicMute",
            function()
                awful.spawn("pactl set-source-mute @DEFAULT_SOURCE@ toggle", false)
            end,
            {description = "Mute Microphone", group = "media"}
        )
    }
)

local function viewTag(index)
    local screen = awful.screen.focused()
    local tag = screen.tags[index]

    if index == 0 then
        tag = screen.tags[10]
    end

    if tag then
        tag:view_only()
    end
end

local function toggleTag(index)
    local screen = awful.screen.focused()
    local tag = screen.tags[index]

    if index == 0 then
        tag = screen.tags[10]
    end

    if tag then
        awful.tag.viewtoggle(tag)
    end
end

local function moveClientToTag(index)
    if client.focus then
        local tag = client.focus.screen.tags[index]

        if index == 0 then
            tag = client.focus.screen.tags[10]
        end

        if tag then
            client.focus:move_to_tag(tag)
        end
    end
end

local function toggleClientOnTag(index)
    if client.focus then
        local tag = client.focus.screen.tags[index]

        if index == 0 then
            tag = client.focus.screen.tags[10]
        end

        if tag then
            client.focus:toggle_tag(tag)
        end
    end
end

local function selectLayout(index)
    local t = awful.screen.focused().selected_tag
    if t then
        t.layout = t.layouts[index] or t.layout
    end
end

awful.keyboard.append_global_keybindings(
    {
        awful.key {
            modifiers = {modkey},
            keygroup = "numrow",
            description = "only view tag",
            group = "tag",
            on_press = viewTag
        },
        awful.key {
            modifiers = {modkey, "Control"},
            keygroup = "numrow",
            description = "toggle tag",
            group = "tag",
            on_press = toggleTag
        },
        awful.key {
            modifiers = {modkey, "Shift"},
            keygroup = "numrow",
            description = "move focused client to tag",
            group = "tag",
            on_press = moveClientToTag
        },
        awful.key {
            modifiers = {modkey, "Control", "Shift"},
            keygroup = "numrow",
            description = "toggle focused client on tag",
            group = "tag",
            on_press = toggleClientOnTag
        },
        awful.key {
            modifiers = {modkey},
            keygroup = "numpad",
            description = "select layout directly",
            group = "layout",
            on_press = selectLayout
        }
    }
)

client.connect_signal(
    "request::default_mousebindings",
    function()
        awful.mouse.append_client_mousebindings(
            {
                awful.button(
                    {},
                    1,
                    function(c)
                        c:activate {context = "mouse_click"}
                    end
                ),
                awful.button(
                    {modkey},
                    1,
                    function(c)
                        c:activate {context = "mouse_click", action = "mouse_move"}
                    end
                ),
                awful.button(
                    {modkey},
                    3,
                    function(c)
                        c:activate {context = "mouse_click", action = "mouse_resize"}
                    end
                )
            }
        )
    end
)

client.connect_signal(
    "request::default_keybindings",
    function()
        awful.keyboard.append_client_keybindings(
            {
                awful.key({modkey}, "t", awful.titlebar.toggle, {description = "toggle title bar", group = "client"}),
                awful.key(
                    {modkey},
                    "f",
                    function(c)
                        c.fullscreen = not c.fullscreen
                        c:raise()
                    end,
                    {description = "toggle fullscreen", group = "client"}
                ),
                awful.key(
                    {modkey, "Shift"},
                    "q",
                    function(c)
                        c:kill()
                    end,
                    {description = "close", group = "client"}
                ),
                awful.key(
                    {modkey, "Control"},
                    "space",
                    awful.client.floating.toggle,
                    {description = "toggle floating", group = "client"}
                ),
                awful.key(
                    {modkey, "Control"},
                    "Return",
                    function(c)
                        c:swap(awful.client.getmaster())
                    end,
                    {description = "move to master", group = "client"}
                ),
                awful.key(
                    {modkey},
                    "o",
                    function(c)
                        c:move_to_screen()
                    end,
                    {description = "move to screen", group = "client"}
                ),
                awful.key(
                    {modkey},
                    "t",
                    function(c)
                        c.ontop = not c.ontop
                    end,
                    {description = "toggle keep on top", group = "client"}
                ),
                awful.key(
                    {modkey},
                    "n",
                    function(c)
                        -- The client currently has the input focus, so it cannot be
                        -- minimized, since minimized clients can't have the focus.
                        c.minimized = true
                    end,
                    {description = "minimize", group = "client"}
                ),
                awful.key(
                    {modkey},
                    "m",
                    function(c)
                        c.maximized = not c.maximized
                        c:raise()
                    end,
                    {description = "(un)maximize", group = "client"}
                ),
                awful.key(
                    {modkey, "Control"},
                    "m",
                    function(c)
                        c.maximized_vertical = not c.maximized_vertical
                        c:raise()
                    end,
                    {description = "(un)maximize vertically", group = "client"}
                ),
                awful.key(
                    {modkey, "Shift"},
                    "m",
                    function(c)
                        c.maximized_horizontal = not c.maximized_horizontal
                        c:raise()
                    end,
                    {description = "(un)maximize horizontally", group = "client"}
                )
            }
        )
    end
)

-- }}}
